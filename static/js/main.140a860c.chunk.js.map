{"version":3,"sources":["pages/Home.js","components/MovieCard/index.js","components/MovieCard/MovieCard.js","pages/Movies.js","components/ActorCard/index.js","components/ActorCard/Actor.js","pages/SingleMovies.js","pages/SingleTvShow.js","pages/TvShow.js","pages/Latest.js","pages/TopRated.js","pages/Upcoming.js","pages/ActorId.js","pages/Search.js","assets/icons/kino-logo.png","containers/Header/index.js","containers/Header/Header.js","App.js","index.js"],"names":["Home","className","to","MovieCard","id","title","imgLink","rating","releaseDate","src","alt","Movies","useState","isFetched","data","error","movieList","setMovieList","useEffect","axios","get","params","api_key","then","response","catch","results","map","movie","index","poster_path","vote_average","release_date","Actor","name","charName","SingleMovies","match","movieInfo","setMovieInfo","movieInfoRec","setMovieInfoRec","actorsList","setactorsList","movieInfoData","movieCastActors","cast","original_title","overview","runtime","genres","genre","actor","character","profile_path","slice","SingleTvShow","console","log","first_air_date","Latest","TopRated","Upcoming","latest","ActorId","actorMovie","setActorMovie","Search","searchQuery","length","Header","history","useHistory","document","querySelector","searchValue","setSearchValue","push","logo","type","placeholder","onChange","e","target","value","onClick","App","exact","path","component","TvShow","ReactDOM","render","StrictMode","getElementById"],"mappings":"qRAmBeA,EAfF,WACT,OACG,mCACE,sBAAKC,UAAU,iBAAf,UAAgC,4CAC7B,sBAAMA,UAAU,OAAhB,UACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,qBACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,oBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,uBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,+B,uBCVDE,G,MCEG,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,GAAIC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,YAC5C,OACI,eAAC,IAAD,CAAMN,GAAE,iBAAcE,GAAMH,UAAU,aAAtC,UACI,sBAAMA,UAAU,cAAhB,SAA+BM,IAC/B,qBAAKN,UAAU,kBAAf,SACI,qBAAKQ,IAAKH,EAAUI,IAAI,GAAGT,UAAU,eAEzC,oBAAIA,UAAU,aAAd,SAA4BI,IAC5B,oBAAIJ,UAAU,YAAd,SAA2BO,SCoExBG,EAxEA,WAAO,IAAD,EAEiBC,mBAAS,CACvCC,WAAW,EACXC,KAAK,GACLC,MAAO,OALM,mBAEVC,EAFU,KAECC,EAFD,KAmCjB,OA3BAC,qBAAW,WAEPC,IAAMC,IAAN,6CAAyD,CACrDC,OAAQ,CACNC,QAAQ,sCAGXC,MAAK,SAAUC,GAEdP,EAAa,CACTJ,WAAW,EACXC,KAAMU,EAASV,KACfC,OAAO,OAGZU,OAAM,SAAUV,GACfE,EAAa,CACTJ,WAAW,EACXC,KAAK,GACLC,MAAOA,SAIhB,IAKC,mCACI,sBAAKd,UAAU,YAAf,UACI,sBAAMA,UAAU,OAAhB,UACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,qBACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,oBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,uBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,yBAGAe,EAAUH,UACN,qBAAKZ,UAAU,aAAf,SAEQe,EAAUF,KAAKY,QAAQC,KAAI,SAACC,EAAOC,GAAR,OAEvB,aADA,CACC,EAAD,CACIzB,GAAMwB,EAAMxB,GACZC,MAASuB,EAAMvB,MACfC,QAAO,yCAAsCsB,EAAME,aACnDvB,OAAUqB,EAAMG,aAChBvB,YAAeoB,EAAMI,cACdH,QAMvB,kDCpETI,G,MCEG,SAAC,GAAmC,IAAlC7B,EAAiC,EAAjCA,GAAI8B,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,SAAU7B,EAAa,EAAbA,QACpC,OACI,eAAC,IAAD,CAAMJ,GAAE,kBAAaE,GAAMH,UAAU,cAArC,UACI,qBAAKQ,IAAKH,EAASI,IAAI,KACvB,6BAAKwB,IACL,6BAAKC,SCwNFC,EAxNM,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EAGQzB,mBAAS,CACvCC,WAAW,EACXC,KAAK,GACLC,MAAO,OANe,mBAGnBuB,EAHmB,KAGRC,EAHQ,KAS1BrB,qBAAW,WAEPC,IAAMC,IAAN,6CAAiDiB,EAAMhB,OAAOjB,IAAM,CAChEiB,OAAQ,CACNC,QAAQ,sCAGXC,MAAK,SAAUC,GAEde,EAAa,CACT1B,WAAW,EACXC,KAAMU,EAASV,KACfC,OAAO,OAGZU,OAAM,SAAUV,GACfwB,EAAa,CACT1B,WAAW,EACXC,KAAK,GACLC,MAAOA,SAIhB,IAhCuB,MAmCcH,mBAAS,CAC7CC,WAAW,EACXC,KAAK,GACLC,MAAO,OAtCe,mBAmCnByB,EAnCmB,KAmCLC,EAnCK,KA0C1BvB,qBAAW,WAEPC,IAAMC,IAAN,6CAAiDiB,EAAMhB,OAAOjB,GAA9D,oBAAoF,CAChFiB,OAAQ,CACNC,QAAQ,sCAGXC,MAAK,SAAUC,GAEdiB,EAAgB,CACZ5B,WAAW,EACXC,KAAMU,EAASV,KACfC,OAAO,OAGZU,OAAM,SAAUV,GACf0B,EAAgB,CACZ5B,WAAW,EACXC,KAAK,GACLC,MAAOA,SAIhB,IAjEuB,MAkEUH,mBAAS,CACzCC,WAAW,EACXC,KAAK,GACLC,MAAO,OArEe,mBAkEnB2B,EAlEmB,KAkEPC,EAlEO,KA0E1BzB,qBAAW,WAEPC,IAAMC,IAAN,6CAAiDiB,EAAMhB,OAAOjB,GAA9D,YAA4E,CACxEiB,OAAQ,CACNC,QAAQ,sCAGXC,MAAK,SAAUC,GAEdmB,EAAc,CACV9B,WAAW,EACXC,KAAMU,EAASV,KACfC,OAAO,OAGZU,OAAM,SAAUV,GACf4B,EAAc,CACV9B,WAAW,EACXC,KAAK,GACLC,MAAOA,SAGhB,IAIH,IAAM6B,EAAgBN,EAAUxB,KACzB+B,EAAkBH,EAAW5B,KAAKgC,KAI7C,OACG,mCACK,sBAAK7C,UAAU,YAAf,UACI,sBAAMA,UAAU,OAAhB,UACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,qBACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,oBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,uBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,yBAGAqC,EAAUzB,UACN,qCAEI,sBAAKZ,UAAU,OAAf,UAEQ,sBAAKA,UAAU,YAAf,UACK,oBAAIA,UAAU,QAAd,SAAuBqC,EAAUxB,KAAKT,QACnC,cAAC,EAAD,CAEIC,QAAO,yCAAsCgC,EAAUxB,KAAKgB,kBAIxE,qBAAK7B,UAAU,eAGf,qBAAKA,UAAU,cAAf,SAEA,sBAAKA,UAAU,aAAf,UACI,6BAAK2C,EAAcvC,QACnB,6BAAKuC,EAAcG,iBACnB,4BAAIH,EAAcI,WAClB,gDACc,+BAAOJ,EAAcZ,kBAEnC,2CAAcY,EAAcK,WAE3BL,EAAcM,OAAOvB,KAAI,SAACwB,EAAOtB,GAAR,OAC1B,iCAAqBsB,EAAMjB,MAAdL,MAEb,yCAEAa,EAAW7B,UACP,qBAAKZ,UAAU,cAAf,SAGI4C,EAAgBlB,KAAI,SAACyB,EAAOvB,GAAR,OAEhB,qCACI,cAAC,EAAD,CACAzB,GAAIgD,EAAMhD,GAEV8B,KAAMkB,EAAMlB,KACZC,SAAUiB,EAAMC,UAEhB/C,QAAO,0CAAqC8C,EAAME,eAJ7CzB,GAMT,oBAAI5B,UAAU,QAAd,SAAuB4C,EAAgBX,eAM/C,qDAUhB,sBAAKjC,UAAU,QAAf,UACA,sDAEIuC,EAAa3B,UACT,qBAAKZ,UAAU,iBAAf,SAGQuC,EAAa1B,KAAKY,QAAQ6B,MAAM,EAAG,GAAG5B,KAAI,SAACC,EAAOC,GAAR,OACtC,cAAC,EAAD,CACIzB,GAAMwB,EAAMxB,GACZC,MAASuB,EAAMvB,MACfC,QAAO,yCAAsCsB,EAAME,aACnDvB,OAAUqB,EAAMG,aAChBvB,YAAeoB,EAAMI,cACdH,QAMnB,kDAQhB,kDCjNT2B,EANM,WACjB,OACI,qDCmEO7C,EAhEA,WAAO,IAAD,EAEiBC,mBAAS,CACvCC,WAAW,EACXC,KAAK,GACLC,MAAO,OALM,mBAEVC,EAFU,KAECC,EAFD,KAkCjB,OA1BAC,qBAAW,WAEPC,IAAMC,IAAN,0CAAsD,CAClDC,OAAQ,CACNC,QAAQ,sCAGXC,MAAK,SAAUC,GACdiC,QAAQC,IAAK,SAASlC,EAASV,MAC/BG,EAAa,CACTJ,WAAW,EACXC,KAAMU,EAASV,KACfC,OAAO,OAGZU,OAAM,SAAUV,GACfE,EAAa,CACTJ,WAAW,EACXC,KAAK,GACLC,MAAOA,SAIhB,IAIC,mCACI,qBAAKd,UAAU,YAAf,SAEQe,EAAUH,UACN,qBAAKZ,UAAU,aAAf,SAEQe,EAAUF,KAAKY,QAAQC,KAAI,SAACC,EAAOC,GAAR,OACvB,cAAC,EAAD,CACIzB,GAAMwB,EAAMxB,GACZC,MAASuB,EAAMM,KACf5B,QAAO,yCAAsCsB,EAAME,aACnDvB,OAAUqB,EAAMG,aAChBvB,YAAeoB,EAAM+B,gBACd9B,QAMvB,iDCkBT+B,EAtEA,WAAO,IAAD,EAEiBhD,mBAAS,CACvCC,WAAW,EACXC,KAAK,GACLC,MAAO,OALM,mBAEVC,EAFU,KAECC,EAFD,KAkCjB,OA1BAC,qBAAW,WAEPC,IAAMC,IAAN,iDAA6D,CACzDC,OAAQ,CACNC,QAAQ,sCAGXC,MAAK,SAAUC,GACdP,EAAa,CACTJ,WAAW,EACXC,KAAMU,EAASV,KACfC,OAAO,OAGZU,OAAM,SAAUV,GACfE,EAAa,CACTJ,WAAW,EACXC,KAAK,GACLC,MAAOA,SAIhB,IAEH0C,QAAQC,IAAI1C,EAAUF,MAGlB,mCACI,sBAAKb,UAAU,YAAf,UACI,sBAAKC,GAAG,YAAYD,UAAU,OAA9B,UACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,qBACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,oBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,uBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,yBAGAe,EAAUH,UACN,qBAAKZ,UAAU,aAAf,SAEQe,EAAUF,KAAKY,QAAQC,KAAI,SAACC,EAAOC,GAAR,OACvB,cAAC,EAAD,CACIzB,GAAMwB,EAAMxB,GACZC,MAASuB,EAAMvB,MACfC,QAAO,yCAAsCsB,EAAME,aACnDvB,OAAUqB,EAAMG,aAChBvB,YAAeoB,EAAMI,cACdH,QAMvB,kDCWTgC,EAvEE,WAAO,IAAD,EAEejD,mBAAS,CACvCC,WAAW,EACXC,KAAK,GACLC,MAAO,OALQ,mBAEZC,EAFY,KAEDC,EAFC,KAmCnB,OA3BAC,qBAAW,WAEPC,IAAMC,IAAN,+CAA2D,CACvDC,OAAQ,CACNC,QAAQ,sCAGXC,MAAK,SAAUC,GAEdP,EAAa,CACTJ,WAAW,EACXC,KAAMU,EAASV,KACfC,OAAO,OAGZU,OAAM,SAAUV,GACfE,EAAa,CACTJ,WAAW,EACXC,KAAK,GACLC,MAAOA,SAIhB,IAEH0C,QAAQC,IAAI1C,EAAUF,MAGlB,mCACI,sBAAKb,UAAU,YAAf,UACI,sBAAKC,GAAG,YAAYD,UAAU,OAA9B,UACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,qBACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,oBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,uBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,yBAGAe,EAAUH,UACN,qBAAKZ,UAAU,aAAf,SAEQe,EAAUF,KAAKY,QAAQC,KAAI,SAACC,EAAOC,GAAR,OACvB,cAAC,EAAD,CACIzB,GAAMwB,EAAMxB,GACZC,MAASuB,EAAMvB,MACfC,QAAO,yCAAsCsB,EAAME,aACnDvB,OAAUqB,EAAMG,aAChBvB,YAAeoB,EAAMI,cACdH,QAMvB,kDCUTiC,EAvEE,WAAO,IAAD,EAEelD,mBAAS,CACvCC,WAAW,EACXC,KAAK,GACLC,MAAO,OALQ,mBAEZC,EAFY,KAEDC,EAFC,KAmCnB,OA3BAC,qBAAW,WAEPC,IAAMC,IAAN,8CAA0D,CACtDC,OAAQ,CACNC,QAAQ,sCAGXC,MAAK,SAAUC,GAEdP,EAAa,CACTJ,WAAW,EACXC,KAAMU,EAASV,KACfC,OAAO,OAGZU,OAAM,SAAUV,GACfE,EAAa,CACTJ,WAAW,EACXC,KAAK,GACLC,MAAOA,SAIhB,IAEH0C,QAAQC,IAAI1C,EAAUF,MAGlB,mCACI,sBAAKb,UAAU,YAAf,UACI,sBAAKC,GAAG,YAAYD,UAAU,OAA9B,UACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,qBACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,oBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,uBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,yBAGAe,EAAUH,UACN,qBAAKZ,UAAU,aAAf,SAEQe,EAAUF,KAAKY,QAAQC,KAAI,SAACoC,EAAQlC,GAAT,OACvB,cAAC,EAAD,CACIzB,GAAM2D,EAAO3D,GACbC,MAAS0D,EAAO1D,MAChBC,QAAO,yCAAsCyD,EAAOjC,aACpDvB,OAAUwD,EAAOhC,aACjBvB,YAAeuD,EAAO/B,cACfH,QAMvB,kDCCTmC,EA9DC,SAAC,GAAe,IAAb3B,EAAY,EAAZA,MAAY,EACOzB,mBAAS,CAC3CC,WAAW,EACXC,KAAM,GACNC,MAAO,OAJoB,mBACtBkD,EADsB,KACVC,EADU,KAmC7B,OA5BAhD,qBAAU,WACRC,IACGC,IADH,8CAE2CiB,EAAMhB,OAAOjB,GAFxD,kBAGI,CACEiB,OAAQ,CACNC,QAAS,sCAIdC,MAAK,SAAUC,GACd0C,EAAc,CACZrD,WAAW,EACXC,KAAMU,EAASV,KACfC,OAAO,OAGVU,OAAM,SAAUV,GACfmD,EAAc,CACZrD,WAAW,EACXC,KAAM,GACNC,MAAOA,OAGVQ,MAAK,iBAEP,IAIC,qBAAKtB,UAAU,YAAf,SAEQgE,EAAWpD,UACT,qBAAKZ,UAAU,aAAf,SAEQgE,EAAWnD,KAAKgC,KAAKnB,KAAI,SAACC,EAAOC,GAAR,OACrB,cAAC,EAAD,CACEzB,GAAIwB,EAAMxB,GACVC,MAAOuB,EAAMvB,MACbC,QAAO,yCAAoCsB,EAAME,aACjDvB,OAAQqB,EAAMG,aACdvB,YAAaoB,EAAMI,cACdH,QAMjB,8CCsBHsC,EA9EA,SAAC,GAAa,IAAZ9B,EAAW,EAAXA,MAAW,EAEUzB,mBAAS,CAEvCC,WAAW,EACXC,KAAM,GACNC,MAAO,OANa,mBAEjBC,EAFiB,KAENC,EAFM,KAuCxB,OA9BAC,qBAAW,WACPC,IAAMC,IAAN,0DAA6DiB,EAAMhB,OAAO+C,aAAe,CACrF/C,OAAQ,CACJC,QAAS,sCAIhBC,MAAK,SAASC,GACXiC,QAAQC,IAAI,SAAUlC,EAASV,KAAKY,SACpCT,EAAa,CAETJ,WAAW,EACXC,KAAMU,EAASV,KAAKY,QACpBX,OAAO,OAGdU,OAAM,SAASV,GACZE,EAAa,CACTJ,WAAW,EACXC,KAAM,GACNC,MAAOA,OAIdQ,MAAK,iBAIP,CAACc,EAAMhB,OAAO+C,cAGb,sBAAKnE,UAAU,YAAf,UACA,sBAAKC,GAAG,YAAYD,UAAU,OAA9B,UACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,qBACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAA7B,oBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,uBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,aAA/B,yBAGAe,EAAUH,UACN,qBAAKZ,UAAU,aAAf,SAEiC,IAAzBe,EAAUF,KAAKuD,OACXrD,EAAUF,KAAKa,KAAI,SAACC,EAAOC,GAAR,OACf,cAAC,EAAD,CACIzB,GAAMwB,EAAMxB,GACZC,MAASuB,EAAMvB,MACfC,QAAO,yCAAsCsB,EAAME,aACnDvB,OAAUqB,EAAMG,aAChBvB,YAAeoB,EAAMI,cACdH,MAIf,6CAMZ,gDC3ED,G,MAAA,IAA0B,uCCE1ByC,ECOA,WACX,IAAIC,EAAUC,cADG,GAEPC,SAASC,cAAc,sBAEK9D,mBAAS,KAJ9B,mBAIV+D,EAJU,KAIGC,EAJH,KAcjB,OATAnB,QAAQC,IAAIiB,GAEZzD,qBAAW,WACmB,IAAvByD,EAAYN,OACXE,EAAQM,KAAR,kBAAwBF,IAExBJ,EAAQM,KAAR,OAEL,CAACF,IAEA,qBAAK1E,UAAU,SAAf,SAEG,sBAAKA,UAAU,YAAf,UACK,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,SACI,qBAAKQ,IAAKqE,EAAM7E,UAAU,cAAcS,IAAI,WAGhD,sBAAKT,UAAU,eAAf,UACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,cAA7B,oBACA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,cAA/B,wBAGJ,uBAAMA,UAAU,cAAhB,UACI,uBAAO8E,KAAK,OAAO9E,UAAU,eAAe+E,YAAY,aAAaC,SAAU,SAACC,GAAD,OAAON,EAAeM,EAAEC,OAAOC,QAAQA,MAAOT,IAC7H,wBAAQI,KAAK,SAASM,QAASd,EAAQM,KAAR,kBAAwBF,IAAgB1E,UAAU,oBAAjF,6B,MCQLqF,MAtBf,WACE,OACC,qBAAKrF,UAAU,GAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsF,OAAK,EAACC,KAAM,IAAIC,UAAWzF,IAClC,cAAC,IAAD,CAAOuF,OAAK,EAACC,KAAM,UAAUC,UAAW9E,IACxC,cAAC,IAAD,CAAO4E,OAAK,EAACC,KAAM,YAAYC,UAAWC,IAC1C,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,UAAUC,UAAW7B,IACxC,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAM,YAAYC,UAAW5B,IAC1C,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAM,YAAYC,UAAW3B,IAC1C,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAM,aAAaC,UAAWrD,IAC3C,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAM,cAAcC,UAAWzB,IAC5C,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAM,eAAeC,UAAWjC,IAC7C,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAM,uBAAuBC,UAAWtB,aCnC9DwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,W","file":"static/js/main.140a860c.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\r\n\r\nimport './pages.scss';\r\n\r\nconst Home = () => {\r\n    return(\r\n       <>\r\n         <div className='home container'><h1>Home pages</h1>\r\n            <div  className=\"list\">\r\n                <Link to=\"/movies\" className=\"pages-link\">Popular</Link>\r\n                <Link to=\"/latest\" className=\"pages-link\">Latest</Link>\r\n                <Link to=\"/toprated\" className=\"pages-link\">Top-rated</Link>\r\n                <Link to=\"/upcoming\" className=\"pages-link\">Upcoming</Link>\r\n            </div>\r\n         </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Home;","import MovieCard from './MovieCard';\r\n\r\nexport default MovieCard;","import {Link} from 'react-router-dom';\r\nimport \"./MovieCard.scss\";\r\n\r\n\r\nconst MovieCard = ({id, title, imgLink, rating, releaseDate}) => {\r\n    return (\r\n        <Link to = {`/movie/${id}`} className=\"movie-card\">\r\n            <span className=\"card-rating\">{rating}</span>\r\n            <div className=\"card-img-holder\">\r\n                <img src={imgLink } alt=\"\" className=\"card-img\"/>\r\n            </div>\r\n            <h2 className=\"card-title\">{title}</h2>\r\n            <h5 className=\"card-data\">{releaseDate}</h5>\r\n            \r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MovieCard;","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from '../components/MovieCard';\r\nimport './pages.scss';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Movies = () => {\r\n\r\n    const [movieList, setMovieList] = useState({\r\n        isFetched: false,\r\n        data:{},\r\n        error: null\r\n    });\r\n\r\n    useEffect (() => {\r\n\r\n        axios.get( `https://api.themoviedb.org/3/movie/popular`, {\r\n            params: {\r\n              api_key:'f98f570db46bc8502984a58a663f8a9a' \r\n            }\r\n          })\r\n          .then(function (response) {\r\n            // console.log(response.data);\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: response.data,\r\n                error: false,\r\n            })\r\n          })\r\n          .catch(function (error) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data:[],\r\n                error: error,\r\n            })\r\n          })  \r\n\r\n    }, []);\r\n\r\n    // console.log(movieList.data);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                <div  className=\"list\">\r\n                    <Link to=\"/movies\" className=\"pages-link\">Popular</Link>\r\n                    <Link to=\"/latest\" className=\"pages-link\">Latest</Link>\r\n                    <Link to=\"/toprated\" className=\"pages-link\">Top-rated</Link>\r\n                    <Link to=\"/upcoming\" className=\"pages-link\">Upcoming</Link>\r\n                </div>\r\n                {\r\n                    movieList.isFetched ? ( \r\n                        <div className=\"movie-list\">\r\n                            {\r\n                                movieList.data.results.map((movie, index) => (\r\n                                    // <h2>{movie.title}</h2>\r\n                                    <MovieCard\r\n                                        id = {movie.id}\r\n                                        title = {movie.title}\r\n                                        imgLink = {`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                                        rating = {movie.vote_average}\r\n                                        releaseDate = {movie.release_date}\r\n                                        key = {index}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <h1>loading...</h1>\r\n                    )\r\n                \r\n            \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movies;\r\n\r\n","import Actor from './Actor';\r\n\r\nexport default Actor;","import { Link } from 'react-router-dom'\r\n\r\nimport './actor.scss'\r\n\r\nconst ActorCard = ({id, name, charName, imgLink}) => {\r\n    return (\r\n        <Link to={`/person/${id}`} className=\"artist-card\">\r\n            <img src={imgLink} alt=\"\"/>\r\n            <h4>{name}</h4>\r\n            <h5>{charName}</h5>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ActorCard;","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport MovieCard from '../components/MovieCard';\r\n\r\nimport ActorCard from '../components/ActorCard';\r\n\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst SingleMovies = ({match}) => {\r\n\r\n\r\n        const [movieInfo, setMovieInfo] = useState({\r\n            isFetched: false,\r\n            data:{},\r\n            error: null\r\n        });\r\n    \r\n        useEffect (() => {\r\n    \r\n            axios.get( `https://api.themoviedb.org/3/movie/${match.params.id}`, {\r\n                params: {\r\n                  api_key:'f98f570db46bc8502984a58a663f8a9a' \r\n                }\r\n              })\r\n              .then(function (response) {\r\n                // console.log(response.data);\r\n                setMovieInfo({\r\n                    isFetched: true,\r\n                    data: response.data,\r\n                    error: false,\r\n                })\r\n              })\r\n              .catch(function (error) {\r\n                setMovieInfo({\r\n                    isFetched: true,\r\n                    data:[],\r\n                    error: error,\r\n                })\r\n              })  \r\n    \r\n        }, []);\r\n\r\n\r\n        const [movieInfoRec, setMovieInfoRec] = useState({\r\n            isFetched: false,\r\n            data:{},\r\n            error: null\r\n        });\r\n        // console.log(movieInfo.data.title);\r\n    \r\n        useEffect (() => {\r\n    \r\n            axios.get( `https://api.themoviedb.org/3/movie/${match.params.id}/recommendations`, {\r\n                params: {\r\n                  api_key:'f98f570db46bc8502984a58a663f8a9a' \r\n                }\r\n              })\r\n              .then(function (response) {\r\n                // console.log(response.data);\r\n                setMovieInfoRec({\r\n                    isFetched: true,\r\n                    data: response.data,\r\n                    error: false,\r\n                })\r\n              })\r\n              .catch(function (error) {\r\n                setMovieInfoRec({\r\n                    isFetched: true,\r\n                    data:[],\r\n                    error: error,\r\n                })\r\n              })  \r\n    \r\n        }, []);\r\n        const [actorsList, setactorsList] = useState({\r\n            isFetched: false,\r\n            data:{},\r\n            error: null\r\n        });\r\n\r\n        \r\n    \r\n        useEffect (() => {\r\n    \r\n            axios.get( `https://api.themoviedb.org/3/movie/${match.params.id}/credits`, {\r\n                params: {\r\n                  api_key:'f98f570db46bc8502984a58a663f8a9a' \r\n                }\r\n              })\r\n              .then(function (response) {\r\n                // console.log(response.data);\r\n                setactorsList({\r\n                    isFetched: true,\r\n                    data: response.data,\r\n                    error: false,\r\n                })\r\n              })\r\n              .catch(function (error) {\r\n                setactorsList({\r\n                    isFetched: true,\r\n                    data:[],\r\n                    error: error,\r\n                })\r\n              })  \r\n        }, []);\r\n    \r\n        \r\n    \r\n        const movieInfoData = movieInfo.data;\r\n         const movieCastActors = actorsList.data.cast;\r\n        //  console.log(movieCastActors.data);\r\n        // console.log(actorsList.data.cast);\r\n\r\n    return(\r\n       <>\r\n            <div className=\"container\">\r\n                <div  className=\"list\">\r\n                    <Link to=\"/movies\" className=\"pages-link\">Popular</Link>\r\n                    <Link to=\"/latest\" className=\"pages-link\">Latest</Link>\r\n                    <Link to=\"/toprated\" className=\"pages-link\">Top-rated</Link>\r\n                    <Link to=\"/upcoming\" className=\"pages-link\">Upcoming</Link>\r\n                </div>\r\n                {\r\n                    movieInfo.isFetched?(\r\n                        <>\r\n                       \r\n                            <div className='wrap'>\r\n                                \r\n                                    <div className=\"wrap-left\">\r\n                                         <h1 className='title'>{movieInfo.data.title}</h1>\r\n                                            <MovieCard\r\n                                            \r\n                                                imgLink = {`https://image.tmdb.org/t/p/w500${movieInfo.data.poster_path}`}\r\n                                                \r\n                                            />\r\n                                    </div>\r\n                                    <div className=\"wrap-right\">\r\n                                    </div>\r\n\r\n                                    <div className=\"wrap-bottom\">\r\n                                        \r\n                                    <div className=\"front-info\">\r\n                                        <h1>{movieInfoData.title}</h1>\r\n                                        <h2>{movieInfoData.original_title}</h2>\r\n                                        <p>{movieInfoData.overview}</p>\r\n                                        <h4>\r\n                                        Release date: <span>{movieInfoData.release_date}</span>\r\n                                        </h4>\r\n                                        <h4>Runtime: {movieInfoData.runtime}</h4>\r\n\r\n                                        {movieInfoData.genres.map((genre, index) => (\r\n                                        <button key={index}>{genre.name}</button>\r\n                                        ))}\r\n                                        <h2>Actors:</h2>\r\n                                        {\r\n                                        actorsList.isFetched ? (\r\n                                            <div className=\"actors-list\">\r\n                                            {\r\n                                                \r\n                                                movieCastActors.map((actor, index) => (\r\n                                                    \r\n                                                    <>\r\n                                                        <ActorCard\r\n                                                        id={actor.id} \r\n                                                        key={index}\r\n                                                        name={actor.name}\r\n                                                        charName={actor.character}\r\n                                                        \r\n                                                        imgLink={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\r\n                                                    />\r\n                                                    <h1 className='title'>{movieCastActors.name}</h1>\r\n                                                    </>\r\n                                                ))\r\n                                            }\r\n                                            </div>\r\n                                        ) : (\r\n                                            <h2>\r\n                                            Loading ...\r\n                                            </h2>\r\n                                        )\r\n                                        }\r\n                                    </div>\r\n                                    </div>\r\n                                \r\n                            </div>\r\n\r\n                            <div className=\"recom\">\r\n                            <h1>Recommended to watch</h1>\r\n                             {\r\n                                movieInfoRec.isFetched ? ( \r\n                                    <div className=\"rec-movie-list\">\r\n                                        \r\n                                        {\r\n                                            movieInfoRec.data.results.slice(0, 8).map((movie, index) => (\r\n                                                <MovieCard\r\n                                                    id = {movie.id}\r\n                                                    title = {movie.title}\r\n                                                    imgLink = {`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                                                    rating = {movie.vote_average}\r\n                                                    releaseDate = {movie.release_date}\r\n                                                    key = {index}\r\n                                                />\r\n                                            ))\r\n                                        }\r\n                                        </div>\r\n                                    ) : (\r\n                                        <h1>loading...</h1>\r\n                                    )\r\n                                \r\n                            \r\n                                 }\r\n                            </div>\r\n                        </>\r\n                    ):(\r\n                        <h1>Loading...</h1>\r\n                    )\r\n                }\r\n              \r\n            </div>\r\n            \r\n       </>\r\n    )\r\n}\r\n\r\nexport default SingleMovies;","const SingleTvShow = () => {\r\n    return(\r\n        <h1>SingleTvShow pages</h1>\r\n    )\r\n}\r\n\r\nexport default SingleTvShow;","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from '../components/MovieCard';\r\nimport './pages.scss';\r\n\r\nconst Movies = () => {\r\n\r\n    const [movieList, setMovieList] = useState({\r\n        isFetched: false,\r\n        data:{},\r\n        error: null\r\n    });\r\n\r\n    useEffect (() => {\r\n\r\n        axios.get( `https://api.themoviedb.org/3/tv/popular`, {\r\n            params: {\r\n              api_key:'f98f570db46bc8502984a58a663f8a9a' \r\n            }\r\n          })\r\n          .then(function (response) {\r\n            console.log( 'tvshou',response.data);\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: response.data,\r\n                error: false,\r\n            })\r\n          })\r\n          .catch(function (error) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data:[],\r\n                error: error,\r\n            })\r\n          })  \r\n\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                {\r\n                    movieList.isFetched ? ( \r\n                        <div className=\"movie-list\">\r\n                            {\r\n                                movieList.data.results.map((movie, index) => (\r\n                                    <MovieCard\r\n                                        id = {movie.id}\r\n                                        title = {movie.name}\r\n                                        imgLink = {`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                                        rating = {movie.vote_average}\r\n                                        releaseDate = {movie.first_air_date}\r\n                                        key = {index}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <h1>loading...</h1>\r\n                    )\r\n                \r\n            \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movies;","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from '../components/MovieCard';\r\nimport './pages.scss';\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Latest = () => {\r\n\r\n    const [movieList, setMovieList] = useState({\r\n        isFetched: false,\r\n        data:{},\r\n        error: null\r\n    });\r\n\r\n    useEffect (() => {\r\n\r\n        axios.get( `https://api.themoviedb.org/3/movie/now_playing`, {\r\n            params: {\r\n              api_key:'f98f570db46bc8502984a58a663f8a9a' \r\n            }\r\n          })\r\n          .then(function (response) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: response.data,\r\n                error: false,\r\n            })\r\n          })\r\n          .catch(function (error) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data:[],\r\n                error: error,\r\n            })\r\n          })  \r\n\r\n    }, []);\r\n\r\n    console.log(movieList.data);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                <div to=\"/tv-shows\" className=\"list\">\r\n                    <Link to=\"/movies\" className=\"pages-link\">Popular</Link>\r\n                    <Link to=\"/latest\" className=\"pages-link\">Latest</Link>\r\n                    <Link to=\"/toprated\" className=\"pages-link\">Top-rated</Link>\r\n                    <Link to=\"/upcoming\" className=\"pages-link\">Upcoming</Link>\r\n                </div>\r\n                {\r\n                    movieList.isFetched ? ( \r\n                        <div className=\"movie-list\">\r\n                            {\r\n                                movieList.data.results.map((movie, index) => (\r\n                                    <MovieCard\r\n                                        id = {movie.id}\r\n                                        title = {movie.title}\r\n                                        imgLink = {`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                                        rating = {movie.vote_average}\r\n                                        releaseDate = {movie.release_date}\r\n                                        key = {index}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <h1>loading...</h1>\r\n                    )\r\n                \r\n            \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Latest;","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from '../components/MovieCard';\r\nimport './pages.scss';\r\n\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst TopRated = () => {\r\n\r\n    const [movieList, setMovieList] = useState({\r\n        isFetched: false,\r\n        data:{},\r\n        error: null\r\n    });\r\n\r\n    useEffect (() => {\r\n\r\n        axios.get( `https://api.themoviedb.org/3/movie/top_rated`, {\r\n            params: {\r\n              api_key:'f98f570db46bc8502984a58a663f8a9a' \r\n            }\r\n          })\r\n          .then(function (response) {\r\n            // console.log(response.data);\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: response.data,\r\n                error: false,\r\n            })\r\n          })\r\n          .catch(function (error) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data:[],\r\n                error: error,\r\n            })\r\n          })  \r\n\r\n    }, []);\r\n\r\n    console.log(movieList.data);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                <div to=\"/tv-shows\" className=\"list\">\r\n                    <Link to=\"/movies\" className=\"pages-link\">Popular</Link>\r\n                    <Link to=\"/latest\" className=\"pages-link\">Latest</Link>\r\n                    <Link to=\"/toprated\" className=\"pages-link\">Top-rated</Link>\r\n                    <Link to=\"/upcoming\" className=\"pages-link\">Upcoming</Link>\r\n                </div>\r\n                {\r\n                    movieList.isFetched ? ( \r\n                        <div className=\"movie-list\">\r\n                            {\r\n                                movieList.data.results.map((movie, index) => (\r\n                                    <MovieCard\r\n                                        id = {movie.id}\r\n                                        title = {movie.title}\r\n                                        imgLink = {`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                                        rating = {movie.vote_average}\r\n                                        releaseDate = {movie.release_date}\r\n                                        key = {index}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <h1>loading...</h1>\r\n                    )\r\n                \r\n            \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopRated;","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from '../components/MovieCard';\r\nimport './pages.scss';\r\n\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Upcoming = () => {\r\n\r\n    const [movieList, setMovieList] = useState({\r\n        isFetched: false,\r\n        data:{},\r\n        error: null\r\n    });\r\n\r\n    useEffect (() => {\r\n\r\n        axios.get( `https://api.themoviedb.org/3/movie/upcoming`, {\r\n            params: {\r\n              api_key:'f98f570db46bc8502984a58a663f8a9a' \r\n            }\r\n          })\r\n          .then(function (response) {\r\n            // console.log(response.data);\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: response.data,\r\n                error: false,\r\n            })\r\n          })\r\n          .catch(function (error) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data:[],\r\n                error: error,\r\n            })\r\n          })  \r\n\r\n    }, []);\r\n\r\n    console.log(movieList.data);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                <div to=\"/tv-shows\" className=\"list\">\r\n                    <Link to=\"/movies\" className=\"pages-link\">Popular</Link>\r\n                    <Link to=\"/latest\" className=\"pages-link\">Latest</Link>\r\n                    <Link to=\"/toprated\" className=\"pages-link\">Top-rated</Link>\r\n                    <Link to=\"/upcoming\" className=\"pages-link\">Upcoming</Link>\r\n                </div>\r\n                {\r\n                    movieList.isFetched ? ( \r\n                        <div className=\"movie-list\">\r\n                            {\r\n                                movieList.data.results.map((latest, index) => (\r\n                                    <MovieCard\r\n                                        id = {latest.id}\r\n                                        title = {latest.title}\r\n                                        imgLink = {`https://image.tmdb.org/t/p/w500${latest.poster_path}`}\r\n                                        rating = {latest.vote_average}\r\n                                        releaseDate = {latest.release_date}\r\n                                        key = {index}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <h1>loading...</h1>\r\n                    )\r\n                \r\n            \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Upcoming;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport MovieCard from '../components/MovieCard'\r\n\r\n// import \"./pages.scss\";\r\n\r\nconst ActorId = ({ match }) => {\r\n  const [actorMovie, setActorMovie] = useState({\r\n    isFetched: false,\r\n    data: [],\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/person/${match.params.id}/movie_credits`,\r\n        {\r\n          params: {\r\n            api_key: \"d2a8ca5d342a4ac27541b9319d594c83\",\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setActorMovie({\r\n          isFetched: true,\r\n          data: response.data,\r\n          error: false,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        setActorMovie({\r\n          isFetched: true,\r\n          data: [],\r\n          error: error,\r\n        });\r\n      })\r\n      .then(function () {\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n \r\n      <div className=\"container\">\r\n          {\r\n              actorMovie.isFetched ? (\r\n                <div className=\"movie-list\">\r\n                    {\r\n                        actorMovie.data.cast.map((movie, index) => (\r\n                            <MovieCard\r\n                              id={movie.id}\r\n                              title={movie.title}\r\n                              imgLink={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                              rating={movie.vote_average}\r\n                              releaseDate={movie.release_date}\r\n                              key={index}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n              ) : (\r\n                  <p>Loading...</p>\r\n              )\r\n          }         \r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ActorId;","import {useEffect, useState} from 'react';\r\n\r\nimport axios from 'axios';\r\nimport MovieCard from '../components/MovieCard';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Search = ({match}) => {\r\n\r\n    const [movieList, setMovieList] = useState({\r\n\r\n        isFetched: false,\r\n        data: [],\r\n        error: null\r\n    });\r\n\r\n    useEffect (() => {\r\n        axios.get(`https://api.themoviedb.org/3/search/movie?query=${match.params.searchQuery}`, {\r\n            params: {\r\n                api_key: 'f98f570db46bc8502984a58a663f8a9a'\r\n            }\r\n        })\r\n\r\n        .then(function(response) {\r\n            console.log('Natija', response.data.results);\r\n            setMovieList({\r\n                \r\n                isFetched: true,\r\n                data: response.data.results,\r\n                error: false\r\n            })\r\n        })\r\n        .catch(function(error) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: [],\r\n                error: error\r\n            })\r\n\r\n        })\r\n        .then(function(){\r\n\r\n        });\r\n\r\n    }, [match.params.searchQuery])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n        <div to=\"/tv-shows\" className=\"list\">\r\n            <Link to=\"/movies\" className=\"pages-link\">Popular</Link>\r\n            <Link to=\"/latest\" className=\"pages-link\">Latest</Link>\r\n            <Link to=\"/toprated\" className=\"pages-link\">Top-rated</Link>\r\n            <Link to=\"/upcoming\" className=\"pages-link\">Upcoming</Link>\r\n        </div>\r\n        {\r\n            movieList.isFetched ? ( \r\n                <div className=\"movie-list\">\r\n                    {\r\n                        movieList.data.length !==0 ?(\r\n                            movieList.data.map((movie, index) => (\r\n                                <MovieCard\r\n                                    id = {movie.id}\r\n                                    title = {movie.title}\r\n                                    imgLink = {`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                                    rating = {movie.vote_average}\r\n                                    releaseDate = {movie.release_date}\r\n                                    key = {index}\r\n                                />\r\n                            ))\r\n                        ):(\r\n                            <h1>No Result</h1>\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n            ) : (\r\n                <h1>loading...</h1>\r\n            )\r\n        \r\n    \r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Search;","export default __webpack_public_path__ + \"static/media/kino-logo.74d5b816.png\";","import Header from \"./Header\";\r\n\r\nexport default Header;","import {Link, useHistory} from 'react-router-dom';\r\n\r\nimport './Header.scss';\r\n\r\nimport logo from \"../../assets/icons/kino-logo.png\";\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nconst Header = () => {\r\n    let history = useHistory();\r\n    let btn = document.querySelector('.header-search-btn')\r\n\r\n    const [searchValue, setSearchValue] = useState('');\r\n    console.log(searchValue);\r\n\r\n    useEffect (() => {\r\n        if(searchValue.length !== 0){\r\n            history.push(`/search/${searchValue}`);\r\n        }else{\r\n            history.push(`/`)\r\n        }\r\n    }, [searchValue])\r\n    return(\r\n        <div className=\"header\">\r\n           \r\n           <div className=\"container\">\r\n                <Link to='/' className=\"header-logo\">\r\n                    <img src={logo} className=\"header-logo\" alt=\"logo\" />\r\n                </Link>\r\n\r\n                <div className=\"header-links\">\r\n                    <Link to=\"/movies\" className=\"header-link\">Movies</Link>\r\n                    <Link to=\"/tv-shows\" className=\"header-link\">Tv Show</Link>\r\n                </div>\r\n\r\n                <form className=\"header-form\">\r\n                    <input type=\"text\" className=\"header-input\" placeholder=\"Input here\" onChange={(e) => setSearchValue(e.target.value)} value={searchValue}  />\r\n                    <button type=\"submit\" onClick={history.push(`/search/${searchValue}`)} className=\"header-search-btn\">Search</button>\r\n                </form>\r\n           </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n  \n} from 'react-router-dom';\n\nimport {\n  Home,\n  Movies,\n  SingleMovies,\n  SingleTvShow,\n  TvShow,\n  Latest,\n  TopRated,\n  Upcoming,\n  ActorId,\n  Search\n} from './pages';\n\nimport Header from \"./containers/Header\";\n\nimport \"./assets/styles/main.scss\";\n\nfunction App() {\n  return (\n   <div className=\"\">\n     <Router>\n       <Header/>\n       <Switch>\n         <Route exact path =\"/\" component={Home}/>\n         <Route exact path =\"/movies\" component={Movies}/>\n         <Route exact path =\"/tv-shows\" component={TvShow}/>\n         <Route exact path =\"/latest\" component={Latest}/>\n         <Route exact path =\"/toprated\" component={TopRated}/>\n         <Route exact path =\"/upcoming\" component={Upcoming}/>\n         <Route exact path =\"/movie/:id\" component={SingleMovies}/>\n         <Route exact path =\"/person/:id\" component={ActorId}/>\n         <Route exact path =\"/tv-show/:id\" component={SingleTvShow}/>\n         <Route exact path =\"/search/:searchQuery\" component={Search}/>\n       </Switch>\n     </Router>\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}